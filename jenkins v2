node {
    stage('SCM checkout')
    {
        git 'https://github.com/cyberorcas/my-app.git'
    }
      stage('Maven-compile-build')
    {
        def mvnHome = tool name : 'maven3', type :'maven'
        sh "${mvnHome}/bin/mvn clean package"
        sh 'mv target/myweb*.war target/newapp.war'
    }
    {
        stage('SonarQube Analysis') {
	        def mvnHome =  tool name: 'maven3', type: 'maven'
	        withSonarQubeEnv('sonar') { 
	          sh "${mvnHome}/bin/mvn sonar:sonar"
	        }
	    }
    stage('docker-image-build')
    {
        sh 'docker build -t cyberorcas/myweb:0.0.3 . '
    }
    stage('Docker Image Push')
    {
   withCredentials([string(credentialsId: 'dockerPass', variable: 'dockerPassword')])
    {
   sh "docker login -u cyberorcas -p ${dockerPassword}"
    }
   sh 'docker push cyberorcas/myweb:0.0.3'
   
    }
    stage('remove-existing-pkg')
    {
    try
    {
        sh 'docker rm -f tomcattest'
    }
    catch(error)
    {
        // do nothing if there is an exception
    }
    }
    stage('docker-deployment')
    {
         sh 'docker run -d -p 8090:8080 --name tomcattest cyberorcas/myweb:0.0.3' 
    }
}
